<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">

<!--参考 http://ju.outofmemory.cn/entry/94633 -->
<configuration>

    <!-- 配置 配置属性 -->
	<properties>
		<property name="driver" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost:3306/mybatis-plus" />
		<property name="username" value="root" />
		<property name="password" value="" />
	</properties>
	
	<!-- mybatis主要配置参考
	    http://www.mybatis.org/mybatis-3/zh/configuration.html -->
	<settings>  
        <setting name="cacheEnabled" value="true" />  
        <setting name="lazyLoadingEnabled" value="true" />  
        <setting name="multipleResultSetsEnabled" value="true" />  
        <setting name="useColumnLabel" value="true" />  
        <setting name="useGeneratedKeys" value="false" />  
        <setting name="autoMappingBehavior" value="PARTIAL" />  
        <setting name="defaultExecutorType" value="SIMPLE" />  
        <setting name="defaultStatementTimeout" value="25" />  
        <setting name="safeRowBoundsEnabled" value="false" />  
        <setting name="mapUnderscoreToCamelCase" value="false" />  
        <setting name="localCacheScope" value="SESSION" />  
        <setting name="jdbcTypeForNull" value="OTHER" />  
        <setting name="lazyLoadTriggerMethods" value="equals,clone,hashCode,toString" />  
    </settings>

    <!-- 配置别名，在xml中使用  mybatis提供了内置默认的别名-->
	<typeAliases>
		<typeAlias alias="Integer" type="java.lang.Integer" />
		<typeAlias alias="Long" type="java.lang.Long" />
		<typeAlias alias="HashMap" type="java.util.HashMap" />
		<typeAlias alias="LinkedHashMap" type="java.util.LinkedHashMap" />
		<typeAlias alias="ArrayList" type="java.util.ArrayList" />
		<typeAlias alias="LinkedList" type="java.util.LinkedList" />
		<typeAlias alias="sysUser" type="com.springdb.mybatis.entity.SysUser" />
	</typeAliases>

    <!-- 配置转化器,在查询时jdbcType转换 javaType,更新时javaType转换jdbcType
         mybatis提供了内置的类型转化器  在此可以自定义如枚举类型,在sql xml
                中通过typeHandler 强制指定约定的转换类型 -->
	<typeHandlers>
		<typeHandler  handler="org.apache.ibatis.type.EnumOrdinalTypeHandler"
			javaType="com.springdb.mybatis.enums.TypeEnum" jdbcType="INTEGER" />
		<typeHandler  handler="org.apache.ibatis.type.EnumTypeHandler"
			javaType="com.springdb.mybatis.enums.DeleteEnum" jdbcType="VARCHAR" />			
	</typeHandlers>
	

    <!-- 配置环境配置文件 -->
	<environments default="development">
		<environment id="development">
			<!-- type="JDBC" 代表使用JDBC的提交和回滚来管理事务 -->
			<transactionManager type="JDBC" />
			<!-- mybatis提供了3种数据源类型，分别是：POOLED,UNPOOLED,JNDI -->
			<!-- POOLED 表示支持JDBC数据源连接池 -->
			<!-- UNPOOLED 表示不支持数据源连接池 -->
			<!-- JNDI 表示支持外部数据源连接池 -->
			<dataSource type="POOLED">
				<property name="driver" value="${driver}" />
				<property name="url" value="${url}" />
				<property name="username" value="${username}" />
				<property name="password" value="${password}" />
			</dataSource>
		</environment>
	</environments>
	

    <!-- Spring   MapperScannerConfigurer中可以配置无需在此配置
	<mappers>
	</mappers>
    -->

</configuration>