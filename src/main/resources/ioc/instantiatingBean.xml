<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
	       http://www.springframework.org/schema/beans
	       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		   http://www.springframework.org/schema/context
		   http://www.springframework.org/schema/context/spring-context-3.0.xsd">

	<!--使用默认构造参数 -->
	<bean name="bean1" class="com.spring.ioc.model.HelloImpl"
		destroy-method="destroy" init-method="init" />

	<!-- 使用构造函数实例化bean star -->
	<!-- 通过构造器参数索引方式依赖注入 -->
	<bean id="bean2_byIndex" class="com.spring.ioc.model.HelloImpl3">
		<constructor-arg index="0" value="Hello World!" />
		<constructor-arg index="1" value="1" />
	</bean>
	<!-- 通过构造器参数类型方式依赖注入 -->
	<bean id="bean2_byType" class="com.spring.ioc.model.HelloImpl3">
		<constructor-arg type="java.lang.String"
			value="Hello World!" />
		<constructor-arg type="int" value="2" />
	</bean>
	<!-- 通过构造器参数名称方式依赖注入 -->
	<bean id="bean2_byName" class="com.spring.ioc.model.HelloImpl3">
		<constructor-arg name="message" value="Hello World!" />
		<constructor-arg name="index" value="3" />
	</bean>
	<!-- 通过构造器参数名称方式依赖注入对象属性 -->
	<bean id="bean2_byRef" class="com.spring.ioc.model.HelloImpl3">
		<constructor-arg name="message" ref="message" />
		<constructor-arg name="index" ref="index" />
	</bean>
	<!-- 使用构造函数实例化bean end -->


	<bean id="bean5" class="com.spring.ioc.model.HelloImpl4">
		<property name="message" value="Hello World!" />
		<property name="index">
			<value>4</value>
		</property>
	</bean>





	<!-- 通过静态工厂实例化bean star -->
	<!-- 通过静态工厂参数索引方式依赖注入 -->
	<bean id="bean3_byIndex"
		class="com.spring.ioc.model.DependencyInjectByStaticFactory"
		factory-method="newInstance">
		<constructor-arg index="0" value="Hello World!" />
		<constructor-arg index="1" value="1" />
	</bean>
	<!-- 通过静态工厂参数类型方式依赖注入 -->
	<bean id="bean3_byType"
		class="com.spring.ioc.model.DependencyInjectByStaticFactory"
		factory-method="newInstance">
		<constructor-arg type="java.lang.String"
			value="Hello World!" />
		<constructor-arg type="int" value="2" />
	</bean>
	<!-- 通过静态工厂参数名称方式依赖注入 -->
	<bean id="bean3_byName"
		class="com.spring.ioc.model.DependencyInjectByStaticFactory"
		factory-method="newInstance">
		<constructor-arg name="message" value="Hello World!" />
		<constructor-arg name="index" value="3" />
	</bean>
	<!-- 通过静态工厂实例化bean end -->


	<!-- 通过实例工厂实例化bean star -->
	<!-- instanceFactoryDependencyInject star -->
	<bean id="instanceFactory"
		class="com.spring.ioc.model.DependencyInjectByInstanceFactory" />

	<!-- 通过实例工厂参数索引方式依赖注入 -->
	<bean id="bean4_byIndex" factory-bean="instanceFactory"
		factory-method="newInstance">
		<constructor-arg index="0" value="Hello World!" />
		<constructor-arg index="1" value="1" />
	</bean>
	<!-- 通过实例工厂参数类型方式依赖注入 -->
	<bean id="bean4_byType" factory-bean="instanceFactory"
		factory-method="newInstance">
		<constructor-arg type="java.lang.String"
			value="Hello World!" />
		<constructor-arg type="int" value="2" />
	</bean>
	<!-- 通过实例工厂参数名称方式依赖注入 -->
	<bean id="bean4_byName" factory-bean="instanceFactory"
		factory-method="newInstance" >
		<constructor-arg name="message" value="Hello World!" />
		<constructor-arg name="index" value="3" />
	</bean>
	<!-- 通过实例工厂实例化bean end -->

	<bean id="message" class="java.lang.String">
		<constructor-arg index="0" value="Hello World!" />
	</bean>
	<bean id="index" class="java.lang.String">
		<constructor-arg index="0" value="4" />
	</bean>
</beans>
